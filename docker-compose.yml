volumes:
  postgres-data:
  redis-data:

networks:
  backend:
  frontend:

services:
  postgres:
    image: postgres:17.4-bookworm
    restart: always
    environment:
      - POSTGRES_ROOT_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4.2-bookworm
    restart: always
    expose:
      - "6379"
    volumes:
      - redis-data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  core:
    image: ghcr.io/mairie360/core:latest
    restart: always
    environment:
      HOSTNAME: "0.0.0.0"
      PORT: 3000
      POSTGRES_URL: postgresql://postgres:postgres@postgres:5432/core
      REDIS_URL: redis://redis:6379
    expose:
      - "3000"
    networks:
      - backend
      - frontend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5

  projects:
    build:
      context: .
      dockerfile: Dockerfile
    pull_policy: always
    restart: always
    environment:
      HOSTNAME: "0.0.0.0"
      PORT: 3000
      POSTGRES_URL: postgresql://postgres:postgres@postgres:5432/projects
      REDIS_URL: redis://redis:6379
      CORE_PUBLIC_URL: http://development.mairie360.fr
    expose:
      - "3000"
    networks:
      - backend
      - frontend
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.27.4-bookworm
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - frontend
    depends_on:
      projects:
        condition: service_healthy
